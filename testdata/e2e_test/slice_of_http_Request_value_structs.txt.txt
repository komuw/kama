
[
NAME: []http.Request
KIND: slice
SIGNATURE: [[]http.Request]
FIELDS: []
METHODS: []
STACK_TRACE: [
	github.com/komuw/kama/kama.go:113 github.com/komuw/kama.Dir
	github.com/komuw/kama/e2e_test.go:400 github.com/komuw/kama_test.TestDir.func4
	testing/testing.go:1689 testing.tRunner
	runtime/asm_amd64.s:1695 runtime.goexit]
SNIPPET: []http.Request{
   Request{
    Method: "0",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "1",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "2",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "3",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "4",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "5",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "6",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "7",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "8",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "9",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "10",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "11",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "12",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   Request{
    Method: "13",
    URL: *url.URL(nil),
    Proto: "",
    ProtoMajor: int(0),
    ProtoMinor: int(0),
    Header: http.Header{(nil)},
    Body: io.ReadCloser nil,
    GetBody: func() (io.ReadCloser, error),
    ContentLength: int64(0),
    TransferEncoding: []string{(nil)},
    Close: false,
    Host: "",
    Form: url.Values{(nil)},
    PostForm: url.Values{(nil)},
    MultipartForm: *multipart.Form(nil),
    Trailer: http.Header{(nil)},
    RemoteAddr: "",
    RequestURI: "",
    TLS: *tls.ConnectionState(nil),
    Cancel: <-chan struct {} (len=0, cap=0),
    Response: *http.Response(nil),
  },
   ...<9986 more redacted>..
  }
]
